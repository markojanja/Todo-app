(()=>{"use strict";class t{constructor(t,e="normal",o,s){this.name=t,this.status=!1,this.priority=e,this.date=s,this.projectKey=o}}class e{constructor(t){this.name=t,this.todos=[]}addTodo(e,o){const s=new t(e,o,this.name);this.todos.push(s)}deleteTodo(t){const e=this.todos.findIndex((e=>e.name===t));this.todos.splice(e,1)}updateStatus(t){this.todos.find((e=>{e.name===t&&(e.status=!e.status)}))}}class o{constructor(){this.projectList=[]}addProjects(t){const o=new e(t);this.projectList.push(o)}deleteProjects(t){const e=this.projectList.findIndex((e=>e.name===t));this.projectList.splice(e,1)}updateProjects(t,e){const o=this.projectList.find((e=>t===e.name));return o.name=e,o}selectProject(t){return this.projectList.find((e=>t===e.name))}filterTodays(t){return{name:"today",todos:this.projectList.reduce(((e,o)=>{const s=o.todos.filter((e=>e.priority===t));return e.concat(s)}),[])}}}class s{static loadUI(){s.createProjectController(),s.renderProjectList(),s.setActiveProject(),s.UpdateProjectController(),s.toggleFormButtonController(),s.renderTodaysTasks()}static projects=new o;static toggleFormButtonController(){document.querySelector(".toggle-form").addEventListener("click",(()=>{document.getElementById("myForm").classList.toggle("show")}))}static createProjectController(){const t=document.getElementById("myForm");t.addEventListener("submit",(e=>{e.preventDefault();const o=document.getElementById("projectName");if(!o.value)return console.log("this is empty");s.projects.addProjects(o.value);const n=s.projects.selectProject(o.value);s.renderProject(n),this.renderProjectList(),t.reset(),t.classList.remove("show")}),!1)}static UpdateProjectController(){document.querySelectorAll(".project-link").forEach((t=>{t.querySelector(".btn-edit").addEventListener("click",(e=>{const o=t.querySelector(".modal");let n=e.target.dataset.value;const r=document.getElementById(`input-${n}`);r.value=n,o.style.display="flex",s.renderProject(s.projects.selectProject(n)),o.addEventListener("submit",(t=>{if(t.preventDefault(),!r.value)return console.log("this is empty");this.projects.updateProjects(n,r.value),this.renderProjectList(),n&&(n=r.value,s.renderProject(s.projects.selectProject(n))),o.reset()}))}))}))}static deleteProjectController(){const t=document.querySelectorAll(".btn-delete"),e=document.querySelector("#project");this.setActiveProject(),t.forEach((t=>{t.addEventListener("click",(t=>{const o=t.target.dataset.value;s.projects.projectList.forEach((t=>{t!==o&&(e.innerHTML="Project Deleted"),this.renderProjectList()})),s.projects.deleteProjects(o),this.renderProjectList()}))}))}static renderProjectList(){const t=document.getElementById("list");t.innerHTML="",s.projects.projectList.map((e=>{t.innerHTML+=`\n      <li class="project-link">\n        <div class="link-container">\n          <h3 class="title">${e.name}</h3>\n          <button class="btn-edit" type="button" data-value="${e.name}"><i class="fa-solid fa-pen" data-value="${e.name}"></i></button>\n          <button class="btn-delete" type="button" data-value="${e.name}"><i class="fa-solid fa-trash"></i></button>\n        </div>\n\n        <form class="modal">\n          <input type="text" class="inputVal" id="input-${e.name}" required>\n          <button class="add-btn" type="submit" id="btn3"><i class="fa-solid fa-check"></i></button>\n        </form>\n      </li>\n      `})),this.UpdateProjectController(),this.deleteProjectController()}static setActiveProject(){document.querySelectorAll(".title").forEach((t=>{t.addEventListener("click",(()=>{const e=t.textContent,o=s.projects.selectProject(e);s.renderProject(o)}),!1)}))}static renderProject(t){const e=document.querySelector("#project");e.innerHTML="",e.innerHTML=`<h1 class='pt'>${t.name}</h1>`,e.innerHTML+='\n    <form action="" id="myForm2" autocomplete="off">\n    <label for="project">Enter task name</label>\n      <input type="text" name="project" id="taskName2" required>\n      <label for="priority">Choose priority</label>\n        <select id="select" name="priority">\n          <option value="normal">normal</option>\n          <option value="high">high</option>\n          <option value="low">low</option>\n        </select>\n      <button type="submit" id="btn"></button>\n    </form>\n    <ul id="taskList"></ul>',s.createTaskConroller(),t.todos.length>0&&s.renderTasks2(t)}static renderTasks2(t){(t=>{const e=document.getElementById("taskList");e.innerHTML="",t.map((t=>{t.status?e.innerHTML+=`\n          <li class="task-card p-${t.priority}">\n          <button class="status-btn st-done" data-val="${t.name}" data-key="${t.projectKey}"></button>\n          <p class="ptt">${t.name}</p>\n          <button class="delete-task" data-value="${t.name}" data-key="${t.projectKey}"></button>\n          </li>`:e.innerHTML+=`\n          <li class="task-card p-${t.priority}">\n            <button class="status-btn" data-val="${t.name}" data-key="${t.projectKey}"></button>\n            <p class="ptt" >${t.name}</p>\n            <button class="delete-task" data-value="${t.name}" data-key="${t.projectKey}"></button>\n          </li>`}))})(t.todos),this.updateTaskController(t),this.deleteTaskController(t)}static createTaskConroller(){const t=document.getElementById("myForm2"),e=document.querySelector(".pt").textContent,o=s.projects.selectProject(e);t.addEventListener("submit",(e=>{e.preventDefault();const n=document.getElementById("taskName2"),r=document.getElementById("select");o.addTodo(n.value,r.value),s.renderTasks2(o),t.reset()}))}static updateTaskController(t){document.querySelectorAll(".status-btn").forEach((e=>{e.addEventListener("click",(e=>{let o=e.target.dataset.key,n=s.projects.selectProject(o);const r=e.target.dataset.val;n.updateStatus(r),s.renderTasks2(n),n=t,s.renderTasks2(n)}))}))}static deleteTaskController(){document.querySelectorAll(".delete-task").forEach((t=>{t.addEventListener("click",(t=>{let e=t.target.dataset.key,o=s.projects.selectProject(e);const n=t.target.dataset.value;o.deleteTodo(n),o=s.projects.filterTodays("normal"),s.renderTasks2(o)}))}))}static renderTodaysTasks(){const t=document.getElementById("today"),e=document.querySelector("#project");t.addEventListener("click",(()=>{e.innerHTML="",e.innerHTML="\n      <h1 class='pt'>Today</h1>\n      <ul id=\"taskList\"></ul>\n      ";let t=s.projects.filterTodays("normal");s.renderTasks2(t)}))}}document.addEventListener("DOMContentLoaded",s.loadUI())})();