(()=>{"use strict";class e{constructor(e,t="normal",o,s){this.name=e,this.status=!1,this.priority=t,this.date=s,this.projectKey=o}}class t{constructor(e){this.name=e,this.todos=[]}addTodo(t,o,s){const r=new e(t,o,this.name,s);this.todos.push(r)}deleteTodo(e){const t=this.todos.findIndex((t=>t.name===e));this.todos.splice(t,1)}updateStatus(e){this.todos.find((t=>{t.name===e&&(t.status=!t.status)}))}}function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function s(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function r(e){s(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===o(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function n(e){s(1,arguments);var t=r(e);return t.setHours(0,0,0,0),t}var a={};function l(){return a}function c(e,t){var o,n,a,c,i,d,u,p;s(1,arguments);var m=l(),j=function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}(null!==(o=null!==(n=null!==(a=null!==(c=null==t?void 0:t.weekStartsOn)&&void 0!==c?c:null==t||null===(i=t.locale)||void 0===i||null===(d=i.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==a?a:m.weekStartsOn)&&void 0!==n?n:null===(u=m.locale)||void 0===u||null===(p=u.options)||void 0===p?void 0:p.weekStartsOn)&&void 0!==o?o:0);if(!(j>=0&&j<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var y=r(e),f=y.getDay(),g=(f<j?7:0)+f-j;return y.setDate(y.getDate()-g),y.setHours(0,0,0,0),y}class i{constructor(){this.projectList=[];const o=JSON.parse(localStorage.getItem("ok"));o&&o.forEach((o=>{const s=new t(o.name);o.todos.forEach((t=>{const r=new e(t.name,t.priority,o.name,t.date);s.todos.push(r)})),s.updateStatus=function(e){this.todos.find((t=>{t.name===e&&(t.status=!t.status)}))},this.projectList.push(s)}))}addProjects(e){const o=new t(e);this.projectList.push(o)}deleteProjects(e){const t=this.projectList.findIndex((t=>t.name===e));this.projectList.splice(t,1)}updateProjects(e,t){const o=this.projectList.find((t=>e===t.name));return o.todos.forEach((e=>{e.projectKey=t})),o.name=t,o}selectProject(e){return this.projectList.find((t=>e===t.name))}getAllTasks(){let e=[];return this.projectList.forEach((t=>{e=t.todos.concat(e)})),{name:"all",todos:e}}filterTodays(){return{name:"today",todos:this.projectList.reduce(((e,t)=>{const o=t.todos.filter((e=>function(e){return s(1,arguments),function(e,t){s(2,arguments);var o=n(e),r=n(t);return o.getTime()===r.getTime()}(e,Date.now())}(new Date(e.date))));return e.concat(o)}),[])}}filterThisWeek(){return{name:"week",todos:this.projectList.reduce(((e,t)=>{const o=t.todos.filter((e=>function(e,t){return s(1,arguments),function(e,t,o){s(2,arguments);var r=c(e,o),n=c(t,o);return r.getTime()===n.getTime()}(e,Date.now(),t)}(new Date(e.date))));return e.concat(o)}),[])}}}const d=(e,t)=>{document.getElementById(e).innerHTML=t?`${e} <span class="badge">${t.todos.length}</span>`:`${e} <span class="badge">0</span>`},u=e=>{const t=document.querySelector("#project");t.innerHTML="",t.innerHTML=`\n  <h1 class='pt'>${e}</h1>\n  <ul id="taskList"></ul>\n  `};class p{static loadUI(){this.init(),this.toggleNav(),d("all",p.projects.getAllTasks()),d("today",p.projects.filterTodays()),d("week",p.projects.filterThisWeek()),p.createProjectController(),p.renderProjectList(),p.setActiveProject(),p.UpdateProjectController(),p.toggleFormButtonController(),p.renderTodaysTasks(),p.renderThisWeek(),p.renderAllTasks()}static toggleNav(){const e=document.querySelector(".nav-btn"),t=document.querySelector(".sidebar");e.addEventListener("click",(()=>{e.classList.toggle("active"),t.classList.toggle("toggle")}))}static toggleForm2(){const e=document.querySelector(".toggle-form-2"),t=document.querySelector(".form-container");e.addEventListener("click",(()=>{t.style.display="flex";const e=document.querySelector(".close-form-btn"),o=document.getElementById("myForm2");e.addEventListener("click",(()=>{t.style.display="none",o.reset()}))}))}static projects=new i;static init(){let e=p.projects.getAllTasks();u("All"),this.renderTasks(e)}static toggleFormButtonController(){document.querySelector(".toggle-form").addEventListener("click",(()=>{document.getElementById("myForm").classList.toggle("show")}))}static createProjectController(){const e=document.getElementById("myForm");e.addEventListener("submit",(t=>{t.preventDefault();const o=document.getElementById("projectName");if(!o.value)return console.log("this is empty");p.projects.addProjects(o.value),localStorage.setItem("ok",JSON.stringify(this.projects.projectList));const s=p.projects.selectProject(o.value);p.renderProject(s),this.renderProjectList(),e.reset(),e.classList.remove("show")}),!1)}static UpdateProjectController(){document.querySelectorAll(".project-link").forEach((e=>{e.querySelector(".btn-edit").addEventListener("click",(t=>{const o=e.querySelector(".modal");let s=t.target.dataset.value,r=document.getElementById(`input-${s}`);r.value=s,o.style.display="flex",p.renderProject(p.projects.selectProject(s)),o.addEventListener("submit",(e=>{if(e.preventDefault(),!r.value)return console.log("this is empty");this.projects.updateProjects(s,r.value),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),this.renderProjectList(),console.log(s),s&&(s=r.value,p.renderProject(p.projects.selectProject(s))),o.reset()}))}))}))}static deleteProjectController(){const e=document.querySelectorAll(".btn-delete"),t=document.querySelector("#project");this.setActiveProject(),e.forEach((e=>{e.addEventListener("click",(e=>{const o=e.target.dataset.value;p.projects.projectList.forEach((e=>{e!==o&&(t.innerHTML="Project Deleted"),this.renderProjectList()})),p.projects.deleteProjects(o),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),this.renderProjectList(),d("all",p.projects.getAllTasks()),d("today",p.projects.filterTodays()),d("week",p.projects.filterThisWeek())}))}))}static renderProjectList(){const e=document.getElementById("list");e.innerHTML="",p.projects.projectList.map((t=>{e.innerHTML+=`\n      <li class="project-link">\n        <div class="link-container">\n          <h3 class="title">${t.name}</h3>\n          <button class="btn-edit" type="button" data-value="${t.name}"><i class="fa-solid fa-pen" data-value="${t.name}"></i></button>\n          <button class="btn-delete" type="button" data-value="${t.name}"><i class="fa-solid fa-trash"></i></button>\n        </div>\n\n        <form class="modal">\n          <input type="text" class="inputVal" id="input-${t.name}" required>\n          <button class="add-btn" type="submit" id="btn3"><i class="fa-solid fa-check"></i></button>\n        </form>\n      </li>\n      `})),this.UpdateProjectController(),this.deleteProjectController()}static setActiveProject(){document.querySelectorAll(".title").forEach((e=>{e.addEventListener("click",(()=>{const t=e.textContent,o=p.projects.selectProject(t);localStorage.setItem("ok",JSON.stringify(p.projects.projectList)),p.renderProject(o)}),!1)}))}static renderProject(e){const t=document.querySelector("#project");t.innerHTML="",t.innerHTML=`\n    <h1 class='pt'>${e.name}</h1>\n    <button class="toggle-form-2"><i class="fa-sharp fa-solid fa-plus"></i></button>\n    `,t.innerHTML+='\n    <div class="form-container">\n    <div class="form-title">\n    <h2>Add new task</h2>\n    <button class="close-form-btn">X</button>\n    </div>\n    <form action="" id="myForm2" autocomplete="off">\n      <label for="taskName2">Task name</label>\n      <input type="text" name="taskName2" id="taskName2" required>\n      <label for="taskDate">Date</label>\n      <input type="date" name="taskDate" id="taskDate" required>\n      <label for="select">Priority</label>\n        <select id="select" name="select">\n          <option value="normal">normal</option>\n          <option value="high">high</option>\n          <option value="low">low</option>\n        </select>\n      <button type="submit" id="btn"></button>\n    </form>\n    </div>\n    <ul id="taskList"></ul>',p.toggleForm2(),p.createTaskConroller(),e.todos.length>0&&p.renderTasks(e)}static renderTasks(e){(e=>{const t=document.getElementById("taskList");t.innerHTML="",e.map((e=>{const o=e.status?"st-done":"";t.innerHTML+=`\n          <li class="task-card p-${e.priority}">\n            <button class="status-btn ${o}" data-val="${e.name}" data-key="${e.projectKey}"></button>\n            <p class="ptt" >${e.name}</p><span class="date">${e.date}</span>\n            <button class="delete-task" data-val="${e.name}" data-key="${e.projectKey}"></button>\n          </li>`}))})(e.todos),p.updateTaskController(e),p.deleteTaskController(e),localStorage.setItem("ok",JSON.stringify(p.projects.projectList))}static createTaskConroller(){const e=document.getElementById("myForm2"),t=document.querySelector(".pt").textContent,o=p.projects.selectProject(t),s=document.querySelector(".form-container");console.log(o),e.addEventListener("submit",(t=>{t.preventDefault();const r=document.getElementById("taskName2"),n=document.getElementById("taskDate"),a=new Date(n.value).toDateString(),l=document.getElementById("select");o.addTodo(r.value,l.value,a),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),p.renderTasks(o),p.renderProjectList(),e.reset(),s.style.display="none",d("all",p.projects.getAllTasks()),d("today",p.projects.filterTodays()),d("week",p.projects.filterThisWeek())}))}static updateTaskController(e){document.querySelectorAll(".status-btn").forEach((t=>{t.addEventListener("click",(t=>{let o=t.target.dataset.key,s=p.projects.selectProject(o),r=t.target.dataset.val;s.updateStatus(r),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),s=e,p.renderTasks(s)}))}))}static deleteTaskController(e){document.querySelectorAll(".delete-task").forEach((t=>{t.addEventListener("click",(t=>{let o=t.target.dataset.key,s=p.projects.selectProject(o),r=t.target.dataset.val;switch(s.deleteTodo(r),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),e.name){case"all":s=p.projects.getAllTasks(),p.renderTasks(s);break;case"today":s=p.projects.filterTodays(),p.renderTasks(s);break;case"week":s=p.projects.filterThisWeek(),p.renderTasks(s);break;default:s=e,p.renderTasks(s)}d("all",p.projects.getAllTasks()),d("today",p.projects.filterTodays()),d("week",p.projects.filterThisWeek())}))}))}static renderAllTasks(){document.getElementById("all").addEventListener("click",(()=>{u("All");let e=p.projects.getAllTasks();d("all",e),p.renderTasks(e),p.renderProjectList()}))}static renderTodaysTasks(){document.getElementById("today").addEventListener("click",(()=>{u("Todays");let e=p.projects.filterTodays();d("today",e),p.renderTasks(e)}))}static renderThisWeek(){document.getElementById("week").addEventListener("click",(()=>{u("Week");let e=p.projects.filterThisWeek();p.renderTasks(e),e=p.projects.filterThisWeek()}))}}document.addEventListener("DOMContentLoaded",p.loadUI())})();