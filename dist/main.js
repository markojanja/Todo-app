(()=>{"use strict";class t{constructor(t){this.name=t}}class e{constructor(t){this.name=t,this.todos=[]}addTodo(e){const o=new t(e);this.todos.push(o)}deleteTodo(t){const e=this.todos.findIndex((e=>e.name===t));this.todos.splice(e,1)}}class o{constructor(){this.projectList=[]}addProjects(t){const o=new e(t);this.projectList.push(o)}deleteProjects(t){const e=this.projectList.findIndex((e=>e.name===t));this.projectList.splice(e,1)}updateProjects(t,e){const o=this.projectList.find((e=>t===e.name));return o.name=e,o}selectProject(t){return this.projectList.find((e=>t===e.name))}}class r{static loadUI(){r.createProjectController(),r.renderProjectList(),r.setActiveProject(),r.UpdateProjectController(),r.toggleFormButtonController()}static projects=new o;static toggleFormButtonController(){document.querySelector(".toggle-form").addEventListener("click",(()=>{document.getElementById("myForm").classList.toggle("show")}))}static createProjectController(){const t=document.getElementById("myForm");t.addEventListener("submit",(e=>{e.preventDefault();const o=document.getElementById("projectName");if(!o.value)return console.log("this is empty");r.projects.addProjects(o.value);const s=r.projects.selectProject(o.value);r.renderProject(s),this.renderProjectList(),t.reset(),t.classList.remove("show")}),!1)}static UpdateProjectController(){document.querySelectorAll(".project-link").forEach((t=>{t.querySelector(".btn-edit").addEventListener("click",(e=>{const o=t.querySelector(".modal");let s=e.target.dataset.value;const n=document.getElementById(`input-${s}`);n.value=s,o.style.display="flex",r.renderProject(r.projects.selectProject(s)),o.addEventListener("submit",(t=>{if(t.preventDefault(),!n.value)return console.log("this is empty");this.projects.updateProjects(s,n.value),this.renderProjectList(),s&&(s=n.value,r.renderProject(r.projects.selectProject(s))),o.reset()}))}))}))}static deleteProjectController(){const t=document.querySelectorAll(".btn-delete"),e=document.querySelector("#project");this.setActiveProject(),t.forEach((t=>{t.addEventListener("click",(t=>{const o=t.target.dataset.value;r.projects.projectList.forEach((t=>{t!==o&&(e.innerHTML="Project Deleted"),this.renderProjectList()})),r.projects.deleteProjects(o),this.renderProjectList()}))}))}static renderProjectList(){const t=document.getElementById("list");t.innerHTML="",r.projects.projectList.map((e=>{t.innerHTML+=`\n      <li class="project-link">\n        <div class="link-container">\n          <h3 class="title">${e.name}</h3>\n          <button class="btn-edit" type="button" data-value="${e.name}"><i class="fa-solid fa-pen" data-value="${e.name}"></i></button>\n          <button class="btn-delete" type="button" data-value="${e.name}"><i class="fa-solid fa-trash"></i></button>\n        </div>\n\n        <form class="modal">\n          <input type="text" class="inputVal" id="input-${e.name}" required>\n          <button class="add-btn" type="submit" id="btn3"><i class="fa-solid fa-check"></i></button>\n        </form>\n      </li>\n      `})),this.UpdateProjectController(),this.deleteProjectController()}static setActiveProject(){document.querySelectorAll(".title").forEach((t=>{t.addEventListener("click",(()=>{const e=t.textContent,o=r.projects.selectProject(e);r.renderProject(o)}),!1)}))}static renderProject(t){const e=document.querySelector("#project");e.innerHTML="",e.innerHTML=`<h1 class='pt'>${t.name}</h1>`,e.innerHTML+='\n    <form action="" id="myForm2">\n      <input type="text" name="project" id="taskName2" required>\n      <button type="submit" id="btn">Add task</button>\n    </form>\n    <ul id="taskList"></ul>',r.createTaskConroller(),t.todos.length>0&&this.renderTasks()}static renderTasks(){const t=document.getElementById("taskList"),e=document.querySelector(".pt").textContent,o=r.projects.selectProject(e);t.innerHTML="",o.todos.map((e=>{t.innerHTML+=`<li>${e.name}</li>`})),r.updateTaskController(),r.deleteTaskController()}static createTaskConroller(){const t=document.getElementById("myForm2"),e=document.querySelector(".pt").textContent,o=r.projects.selectProject(e);t.addEventListener("submit",(e=>{e.preventDefault();const s=document.getElementById("taskName2");o.addTodo(s.value),r.renderTasks(),t.reset()}),!1)}static updateTaskController(){console.log("this is for update")}static deleteTaskController(){console.log("this is for delete")}}document.addEventListener("DOMContentLoaded",r.loadUI())})();