(()=>{"use strict";class t{constructor(t,e="normal",o,s){this.name=t,this.status=!1,this.priority=e,this.date=s,this.projectKey=o}}class e{constructor(t){this.name=t,this.todos=[]}addTodo(e,o,s){const r=new t(e,o,this.name,s);this.todos.push(r)}deleteTodo(t){const e=this.todos.findIndex((e=>e.name===t));this.todos.splice(e,1)}updateStatus(t){this.todos.find((e=>{e.name===t&&(e.status=!e.status)}))}}function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function s(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}var r={};function n(){return r}function a(t,e){var r,a,c,l,i,d,u,p;s(1,arguments);var m=n(),j=function(t){if(null===t||!0===t||!1===t)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}(null!==(r=null!==(a=null!==(c=null!==(l=null==e?void 0:e.weekStartsOn)&&void 0!==l?l:null==e||null===(i=e.locale)||void 0===i||null===(d=i.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==c?c:m.weekStartsOn)&&void 0!==a?a:null===(u=m.locale)||void 0===u||null===(p=u.options)||void 0===p?void 0:p.weekStartsOn)&&void 0!==r?r:0);if(!(j>=0&&j<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var y=function(t){s(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||"object"===o(t)&&"[object Date]"===e?new Date(t.getTime()):"number"==typeof t||"[object Number]"===e?new Date(t):("string"!=typeof t&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(t),f=y.getDay(),h=(f<j?7:0)+f-j;return y.setDate(y.getDate()-h),y.setHours(0,0,0,0),y}class c{constructor(){this.projectList=[];const o=JSON.parse(localStorage.getItem("ok"));o&&o.forEach((o=>{const s=new e(o.name);o.todos.forEach((e=>{const r=new t(e.name,e.priority,o.name,e.date);s.todos.push(r)})),s.updateStatus=function(t){this.todos.find((e=>{e.name===t&&(e.status=!e.status)}))},this.projectList.push(s)}))}addProjects(t){const o=new e(t);this.projectList.push(o)}deleteProjects(t){const e=this.projectList.findIndex((e=>e.name===t));this.projectList.splice(e,1)}updateProjects(t,e){const o=this.projectList.find((e=>t===e.name));return o.name=e,o}selectProject(t){return this.projectList.find((e=>t===e.name))}getAllTasks(){let t=[];return this.projectList.forEach((e=>{t=e.todos.concat(t)})),{name:"all",todos:t}}filterTodays(){return{name:"today",todos:this.projectList.reduce(((t,e)=>{const o=e.todos.filter((t=>t.date===(new Date).toDateString()));return t.concat(o)}),[])}}filterThisWeek(){return{name:"week",todos:this.projectList.reduce(((t,e)=>{const o=e.todos.filter((t=>function(t,e){return s(1,arguments),function(t,e,o){s(2,arguments);var r=a(t,o),n=a(e,o);return r.getTime()===n.getTime()}(t,Date.now(),e)}(new Date(t.date))));return t.concat(o)}),[])}}}const l=t=>{const e=document.querySelector("#project");e.innerHTML="",e.innerHTML=`\n  <h1 class='pt'>${t}</h1>\n  <ul id="taskList"></ul>\n  `};class i{static loadUI(){i.createProjectController(),i.renderProjectList(),i.setActiveProject(),i.UpdateProjectController(),i.toggleFormButtonController(),i.renderTodaysTasks(),i.renderThisWeek(),i.renderAllTasks()}static projects=new c;static saveToLocalStorage(){localStorage.setItem("ok",JSON.stringify(i.projects.projectList))}static toggleFormButtonController(){document.querySelector(".toggle-form").addEventListener("click",(()=>{document.getElementById("myForm").classList.toggle("show")}))}static createProjectController(){const t=document.getElementById("myForm");t.addEventListener("submit",(e=>{e.preventDefault();const o=document.getElementById("projectName");if(!o.value)return console.log("this is empty");i.projects.addProjects(o.value),localStorage.setItem("ok",JSON.stringify(this.projects.projectList));const s=i.projects.selectProject(o.value);i.renderProject(s),this.renderProjectList(),t.reset(),t.classList.remove("show")}),!1)}static UpdateProjectController(){document.querySelectorAll(".project-link").forEach((t=>{t.querySelector(".btn-edit").addEventListener("click",(e=>{const o=t.querySelector(".modal");let s=e.target.dataset.value;const r=document.getElementById(`input-${s}`);r.value=s,o.style.display="flex",i.renderProject(i.projects.selectProject(s)),o.addEventListener("submit",(t=>{if(t.preventDefault(),!r.value)return console.log("this is empty");this.projects.updateProjects(s,r.value),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),this.renderProjectList(),s&&(s=r.value,i.renderProject(i.projects.selectProject(s))),o.reset()}))}))}))}static deleteProjectController(){const t=document.querySelectorAll(".btn-delete"),e=document.querySelector("#project");this.setActiveProject(),t.forEach((t=>{t.addEventListener("click",(t=>{const o=t.target.dataset.value;i.projects.projectList.forEach((t=>{t!==o&&(e.innerHTML="Project Deleted"),this.renderProjectList()})),i.projects.deleteProjects(o),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),this.renderProjectList()}))}))}static renderProjectList(){const t=document.getElementById("list");t.innerHTML="",i.projects.projectList.map((e=>{t.innerHTML+=`\n      <li class="project-link">\n        <div class="link-container">\n          <h3 class="title">${e.name}</h3>\n          <button class="btn-edit" type="button" data-value="${e.name}"><i class="fa-solid fa-pen" data-value="${e.name}"></i></button>\n          <button class="btn-delete" type="button" data-value="${e.name}"><i class="fa-solid fa-trash"></i></button>\n        </div>\n\n        <form class="modal">\n          <input type="text" class="inputVal" id="input-${e.name}" required>\n          <button class="add-btn" type="submit" id="btn3"><i class="fa-solid fa-check"></i></button>\n        </form>\n      </li>\n      `})),this.UpdateProjectController(),this.deleteProjectController()}static setActiveProject(){document.querySelectorAll(".title").forEach((t=>{t.addEventListener("click",(()=>{const e=t.textContent,o=i.projects.selectProject(e);localStorage.setItem("ok",JSON.stringify(i.projects.projectList)),i.renderProject(o)}),!1)}))}static renderProject(t){const e=document.querySelector("#project");e.innerHTML="",e.innerHTML=`<h1 class='pt'>${t.name}</h1>`,e.innerHTML+='\n    <form action="" id="myForm2" autocomplete="off">\n      <label for="project">Enter task name</label>\n      <input type="text" name="project" id="taskName2" required>\n      <label for="date">Pick date</label>\n      <input type="date" name="date" id="taskDate" required>\n      <label for="priority">Choose priority</label>\n        <select id="select" name="priority">\n          <option value="normal">normal</option>\n          <option value="high">high</option>\n          <option value="low">low</option>\n        </select>\n      <button type="submit" id="btn"></button>\n    </form>\n    <ul id="taskList"></ul>',i.createTaskConroller(),t.todos.length>0&&i.renderTasks(t)}static renderTasks(t){(t=>{const e=document.getElementById("taskList");e.innerHTML="",t.map((t=>{const o=t.status?"":"st-done";e.innerHTML+=`\n          <li class="task-card p-${t.priority}">\n            <button class="status-btn ${o}" data-val="${t.name}" data-key="${t.projectKey}"></button>\n            <p class="ptt" >${t.name} ${t.date}</p>\n            <button class="delete-task" data-val="${t.name}" data-key="${t.projectKey}"></button>\n          </li>`}))})(t.todos),i.updateTaskController(t),i.deleteTaskController(t),localStorage.setItem("ok",JSON.stringify(i.projects.projectList))}static createTaskConroller(){const t=document.getElementById("myForm2"),e=document.querySelector(".pt").textContent,o=i.projects.selectProject(e);console.log(o),t.addEventListener("submit",(e=>{e.preventDefault();const s=document.getElementById("taskName2"),r=document.getElementById("taskDate"),n=new Date(r.value).toDateString(),a=document.getElementById("select");o.addTodo(s.value,a.value,n),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),i.renderTasks(o),t.reset()}))}static updateTaskController(t){document.querySelectorAll(".status-btn").forEach((e=>{e.addEventListener("click",(e=>{let o=e.target.dataset.key,s=i.projects.selectProject(o),r=e.target.dataset.val;s.updateStatus(r),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),s=t,i.renderTasks(s)}))}))}static deleteTaskController(t){document.querySelectorAll(".delete-task").forEach((e=>{e.addEventListener("click",(e=>{let o=e.target.dataset.key,s=i.projects.selectProject(o),r=e.target.dataset.val;switch(s.deleteTodo(r),localStorage.setItem("ok",JSON.stringify(this.projects.projectList)),t.name){case"all":s=i.projects.getAllTasks(),i.renderTasks(s);break;case"today":s=i.projects.filterTodays(),i.renderTasks(s);break;case"week":s=i.projects.filterThisWeek(),i.renderTasks(s);break;default:s=t,i.renderTasks(s)}}))}))}static renderAllTasks(){document.getElementById("all").addEventListener("click",(()=>{l("All");let t=i.projects.getAllTasks();i.renderTasks(t)}))}static renderTodaysTasks(){document.getElementById("today").addEventListener("click",(()=>{l("Todays");let t=i.projects.filterTodays();i.renderTasks(t)}))}static renderThisWeek(){document.getElementById("week").addEventListener("click",(()=>{l("Week");let t=i.projects.filterThisWeek();i.renderTasks(t),t=i.projects.filterThisWeek()}))}}document.addEventListener("DOMContentLoaded",i.loadUI())})();